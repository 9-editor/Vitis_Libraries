/********************************************* Disclaimer *********************************************/
/* This file is generated by aiecompiler 2022.2. */
/* Changes to this file may cause incorrect behavior and will be lost if aiecompiler is invoked again.*/

#include <iostream>
#include "adf/adf_api/AIEControlConfig.h"
#include "../../../../../L1/include/aie/fir_decimate_asym.hpp"

/************************** Graph Configurations  *****************************/

adf::GraphConfig GraphConfigurations[] = {
    //{id, name, graphLoadElfFunc, graphInitFunc, graphDebugHalt, coreColumns, coreRows, iterMemColumns, iterMemRows,
    // iterMemAddrs, triggered, plKernelInstanceNames, plAxiLiteModes, plDriverStartFuncs, plDriverCheckIPDoneFuncs}
    {
        0, "filter", nullptr, nullptr, nullptr, {24}, {0}, {24}, {0}, {0x2004}, {0}, {}, {}, {}, {},
    },
};
const int NUM_GRAPH = 1;

/************************** RTP Configurations  *****************************/

adf::RTPConfig RTPConfigurations[] = {
    //{portId, aliasId, portName, aliasName, graphId, isInput, isAsync, isConnect, elemType, numBytes, isPL, hasLock,
    // selectorColumn, selectorRow, selectorAddr, selectorLockId, pingColumn, pingRow, pingAddr, pongColumn, pongRow,
    // pongAddr, pongLockId, plKernelInstanceName, plParameterIndex, plDriverWriteRTP, plDriverReadRTP}
    {6,
     0,
     "filter.firGraph.m_firKernels[0].in[1]",
     "filter.coeff",
     0,
     true,
     true,
     false,
     (adf::RTPConfig::elementType)2,
     18,
     false,
     true,
     24,
     0,
     0x4000,
     0,
     24,
     1,
     0x1fe0,
     2,
     24,
     1,
     0x6000,
     3,
     "",
     -1,
     nullptr,
     nullptr},
};
const int NUM_RTP = 1;

/************************** PLIO Configurations  *****************************/

adf::PLIOConfig PLIOConfigurations[] = {
    //{id, name, loginal_name, shim_column, slaveOrMaster, streamId}
    {0, "", "PLIO_in_0_0", 24, 0, 0},
    {1, "", "PLIO_out_0_0", 24, 1, 0},
};
const int NUM_PLIO = 2;

/************************** ADF API initializer *****************************/

class InitializeAIEControlXRT {
   public:
    InitializeAIEControlXRT() {
        std::cout << "Initializing ADF API..." << std::endl;
#ifdef __EXCLUDE_PL_CONTROL__
        bool exclude_pl_control = true;
#else
        bool exclude_pl_control = false;
#endif
        adf::initializeConfigurations(nullptr, 0, 0, 0, GraphConfigurations, NUM_GRAPH, RTPConfigurations, NUM_RTP,
                                      nullptr, 0, nullptr, 0, nullptr, 0, nullptr, 0, nullptr, 0, PLIOConfigurations,
                                      NUM_PLIO, nullptr, 0, 0, nullptr, false, exclude_pl_control, false, nullptr, true,
                                      2);
    }
} initAIEControlXRT;

#if !defined(__CDO__)

// Kernel Stub Definition
template <>
void xf::dsp::aie::fir::decimate_asym::
    fir_decimate_asym<cint16, short, 9, 3, 15, 0, 384, false, false, 9, 0, 1, 1, 1, 0, 0, 0>::filter(
        input_window<cint16>* __restrict, output_window<cint16>* __restrict, short const (&)[9]) { /* Stub */
}
#endif
