.. _global-namespace:

Global Namespace
================

.. index:: pair: namespace; global

.. toctree::
	:hidden:



.. _doxid-lz4__packer__kernel_8hpp_1a1aa05919ceb42c4b9238e20e0517c0fa:
.. _cid-uintv_t:
.. ref-code-block:: cpp
	:class: overview-code-block

	// typedefs

	typedef ap_uint <PACK_WIDTH> uintV_t


.. FunctionSection

Global Functions
~~~~~~~~~~~~~~~~

.. _doxid-lz4__compress__kernel_8hpp_1ae59b6bc58111bc51abc2fa3c5c6a2713:
.. _cid-xillz4compress:

xilLz4Compress
--------------


.. code-block:: cpp
	
	#include "lz4_compress_kernel.hpp"



.. ref-code-block:: cpp
	:class: title-code-block

	void xilLz4Compress (
	    const uintMemWidth_t* in,
	    uintMemWidth_t* out,
	    uint32_t* compressd_size,
	    uint32_t* in_block_size,
	    uint32_t block_size_in_kb,
	    uint32_t input_size
	    )

LZ4 compression kernel.



.. rubric:: Parameters:

.. list-table::
    :widths: 20 80

    *
        - in

        - input stream width

    *
        - out

        - output stream width

    *
        - compressd_size

        - output size

    *
        - in_block_size

        - intput size

    *
        - block_size_in_kb

        - intput size

    *
        - input_size

        - input size

.. _doxid-lz4__decompress__kernel_8hpp_1a618938655fefae4eaeb448903c667e63:
.. _cid-xillz4decompress:

xilLz4Decompress
----------------


.. code-block:: cpp
	
	#include "lz4_decompress_kernel.hpp"



.. ref-code-block:: cpp
	:class: title-code-block

	void xilLz4Decompress (
	    const uintMemWidth_t* in,
	    uintMemWidth_t* out,
	    uint32_t* in_block_size,
	    uint32_t* in_compress_size,
	    uint32_t block_size_in_kb,
	    uint32_t no_blocks
	    )

LZ4 decompression kernel.



.. rubric:: Parameters:

.. list-table::
    :widths: 20 80

    *
        - in

        - input stream width

    *
        - out

        - output stream width

    *
        - in_block_size

        - intput size

    *
        - in_compress_size

        - output size

    *
        - block_size_in_kb

        - intput size

    *
        - no_blocks

        - number of blocks

.. _doxid-lz4__p2p__decompress__kernel_8hpp_1aabb930b85c0c9a0a62cf004b06f4528a:
.. _cid-xillz4p2pdecompress:

xilLz4P2PDecompress
-------------------


.. code-block:: cpp
	
	#include "lz4_p2p_decompress_kernel.hpp"



.. ref-code-block:: cpp
	:class: title-code-block

	void xilLz4P2PDecompress (
	    const uintMemWidth_t* in,
	    uintMemWidth_t* out,
	    uint32_t* in_block_size,
	    uint32_t* in_compress_size,
	    uint32_t* block_start_idx,
	    uint32_t* no_blocks,
	    uint32_t block_size_in_kb,
	    uint32_t compute_unit,
	    uint8_t total_no_cu
	    )

LZ4 P2P decompression kernel.



.. rubric:: Parameters:

.. list-table::
    :widths: 20 80

    *
        - in

        - input stream width

    *
        - out

        - output stream width

    *
        - in_block_size

        - intput size

    *
        - in_compress_size

        - output size

    *
        - block_start_idx

        - start index of block

    *
        - no_blocks

        - number of blocks for each compute unit

    *
        - block_size_in_kb

        - block input size

    *
        - compute_unit

        - particular compute unit

    *
        - total_no_cu

        - number of compute units

.. _doxid-lz4__packer__kernel_8hpp_1a763d17dd18e56ff101031ae04974c584:
.. _cid-xillz4packer:

xilLz4Packer
------------


.. code-block:: cpp
	
	#include "lz4_packer_kernel.hpp"



.. ref-code-block:: cpp
	:class: title-code-block

	void xilLz4Packer (
	    const uintMemWidth_t* in,
	    uintMemWidth_t* out,
	    uintMemWidth_t* head_prev_blk,
	    uint32_t* compressd_size,
	    uint32_t* in_block_size,
	    uint32_t* encoded_size,
	    uintMemWidth_t* orig_input_data,
	    uint32_t head_res_size,
	    uint32_t offset,
	    uint32_t block_size_in_kb,
	    uint32_t no_blocks,
	    uint32_t tail_bytes
	    )

LZ4 packer kernel.



.. rubric:: Parameters:

.. list-table::
    :widths: 20 80

    *
        - in

        - input stream width

    *
        - out

        - output stream width

    *
        - head_prev_blk

        - header of previous block

    *
        - compressd_size

        - output size

    *
        - in_block_size

        - intput size

    *
        - encoded_size

        - output size

    *
        - orig_input_data

        - output size

    *
        - head_res_size

        - output size

    *
        - offset

        - output size

    *
        - block_size_in_kb

        - intput size

    *
        - no_blocks

        - input size

    *
        - tail_bytes

        - input size

.. _doxid-snappy__compress__kernel_8hpp_1af2be06150a95b0161d5ab7acbe4fee4a:
.. _cid-xilsnappycompress:

xilSnappyCompress
-----------------


.. code-block:: cpp
	
	#include "snappy_compress_kernel.hpp"



.. ref-code-block:: cpp
	:class: title-code-block

	void xilSnappyCompress (
	    const uintMemWidth_t* in,
	    uintMemWidth_t* out,
	    uint32_t* compressd_size,
	    uint32_t* in_block_size,
	    uint32_t block_size_in_kb,
	    uint32_t input_size
	    )

Snappy compression kernel.



.. rubric:: Parameters:

.. list-table::
    :widths: 20 80

    *
        - in

        - input stream width

    *
        - out

        - output stream width

    *
        - compressd_size

        - output size

    *
        - in_block_size

        - intput size

    *
        - block_size_in_kb

        - intput size

    *
        - input_size

        - input size

.. _doxid-snappy__decompress__kernel_8hpp_1a00b8629d78d10844a610742279c95d93:
.. _cid-xilsnappydecompress:

xilSnappyDecompress
-------------------


.. code-block:: cpp
	
	#include "snappy_decompress_kernel.hpp"



.. ref-code-block:: cpp
	:class: title-code-block

	void xilSnappyDecompress (
	    const uintMemWidth_t* in,
	    uintMemWidth_t* out,
	    uint32_t* in_block_size,
	    uint32_t* in_compress_size,
	    uint32_t block_size_in_kb,
	    uint32_t no_blocks
	    )

Snappy decompression kernel top.



.. rubric:: Parameters:

.. list-table::
    :widths: 20 80

    *
        - in

        - input stream width

    *
        - out

        - output stream width

    *
        - in_block_size

        - intput size

    *
        - in_compressd_size

        - output size

    *
        - block_size_in_kb

        - intput size

    *
        - no_blocks

        - input size

.. _doxid-unpacker__kernel_8hpp_1a55bd358d0c404aa9a79e3735178bbc9a:
.. _cid-xilunpacker:

xilUnpacker
-----------


.. code-block:: cpp
	
	#include "unpacker_kernel.hpp"



.. ref-code-block:: cpp
	:class: title-code-block

	void xilUnpacker (
	    const uintMemWidth_t* in,
	    uint32_t* in_block_size,
	    uint32_t* in_compress_size,
	    uint32_t* block_start_idx,
	    uint32_t* no_blocks_per_cu,
	    uint64_t* original_size,
	    uint32_t* in_start_index,
	    uint32_t* no_blocks,
	    uint32_t block_size_in_kb,
	    uint8_t first_chunk,
	    uint8_t total_no_cu
	    )

Unapcker kernel.



.. rubric:: Parameters:

.. list-table::
    :widths: 20 80

    *
        - in

        - input stream width

    *
        - in_block_size

        - input block size

    *
        - in_compress_size

        - input compress size

    *
        - block_start_idx

        - start index of each input block

    *
        - no_blocks_per_cu

        - number of blocks for each compute unit

    *
        - original_size

        - original file size

    *
        - in_start_index

        - input start index

    *
        - no_blocks

        - number of blocks

    *
        - block_size_in_kb

        - size of each block

    *
        - first_chunk

        - first chunk to determine header

    *
        - total_no_cu

        - number of decompress compute units

