<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.5">
  <compounddef id="sha3_8hpp" kind="file">
    <compoundname>sha3.hpp</compoundname>
    <includes local="no">ap_int.h</includes>
    <includes local="no">hls_stream.h</includes>
    <includes local="no">iostream</includes>
    <incdepgraph>
      <node id="133">
        <label>hls_stream.h</label>
      </node>
      <node id="132">
        <label>ap_int.h</label>
      </node>
      <node id="134">
        <label>iostream</label>
      </node>
      <node id="131">
        <label>/wrk/xsjhdnobkup4/tuol/benchmark_data/xf_security/L1/include/xf_security/sha3.hpp</label>
        <link refid="sha3.hpp"/>
        <childnode refid="132" relation="include">
        </childnode>
        <childnode refid="133" relation="include">
        </childnode>
        <childnode refid="134" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innerclass refid="structxf_1_1security_1_1details_1_1block_type" prot="public">xf::security::details::blockType</innerclass>
    <innernamespace refid="namespacexf">xf</innernamespace>
    <innernamespace refid="namespacexf_1_1security">xf::security</innernamespace>
    <innernamespace refid="namespacexf_1_1security_1_1details">xf::security::details</innernamespace>
    <briefdescription>
<para>header file for SHA-3 related functions, including permutation-based hash and extendable-ouput functions. This file is part of XF Security Library. </para>    </briefdescription>
    <detaileddescription>
<para>KECCAK_f is the permutation function which is equivalent to KECCAK-p[1600,24] as defined in the standard. sha3Digest is the main digest part which is responsible for absorbing the input 64-bit message stream into 1600-bit blocks, and squeezing the specific bits of the state array which calculated by the KECCAK_f as the digest according to the suffix of the algorithm. shakeXOF is the extendable-ouput function, the division for message block length can be optimized furtherly using magic number decomposition method. </para>    </detaileddescription>
    <location file="/wrk/xsjhdnobkup4/tuol/benchmark_data/xf_security/L1/include/xf_security/sha3.hpp"/>
  </compounddef>
</doxygen>
