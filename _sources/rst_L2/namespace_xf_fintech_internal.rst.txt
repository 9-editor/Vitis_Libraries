.. index:: pair: namespace; internal
.. _doxid-namespacexf_1_1fintech_1_1internal:
.. _cid-xf::fintech::internal:

namespace internal
==================

.. toctree::
	:hidden:

	struct_xf_fintech_internal_complex_num.rst
	class_xf_fintech_internal_Solver.rst
	class_xf_fintech_internal_StreamWrapper.rst



.. _doxid-namespacexf_1_1fintech_1_1internal_1a4715c29867d70172384dd89d91d25b68:
.. _cid-xf::fintech::internal::errorfunction:
.. _doxid-namespacexf_1_1fintech_1_1internal_1a9bb79284757f133c736006f5d22791f2:
.. _cid-xf::fintech::internal::gaussian:
.. _doxid-namespacexf_1_1fintech_1_1internal_1a8dde084b7703b8d69a8963da18da966a:
.. _cid-xf::fintech::internal::cumulativenormaldistribution:
.. _doxid-namespacexf_1_1fintech_1_1internal_1a5fc0f5d887196b7423010b84faa2aab0:
.. _cid-xf::fintech::internal::blackformula:
.. _doxid-namespacexf_1_1fintech_1_1internal_1a82171bfe5ba9dc8107ba00c7244f8d4f:
.. _cid-xf::fintech::internal::max:
.. _doxid-namespacexf_1_1fintech_1_1internal_1ad402a2327db2eb8e133589ad29a23d86:
.. _cid-xf::fintech::internal::min:
.. _doxid-namespacexf_1_1fintech_1_1internal_1a3001105deacefbf44d6b94b14c47ba6a:
.. _cid-xf::fintech::internal::exp:
.. _doxid-namespacexf_1_1fintech_1_1internal_1a4604c3030da88c81ab329b441251c8be:
.. _cid-xf::fintech::internal::exp-2:
.. _doxid-namespacexf_1_1fintech_1_1internal_1a04f659f403060aa0a2b7e41890518666:
.. _cid-xf::fintech::internal::sqrt:
.. _doxid-namespacexf_1_1fintech_1_1internal_1a972840071f02a136f666c232ccd73fd7:
.. _cid-xf::fintech::internal::sqrt-2:
.. _doxid-namespacexf_1_1fintech_1_1internal_1a1a7da6a9fbc8f735f558c85860672b95:
.. _cid-xf::fintech::internal::log:
.. _doxid-namespacexf_1_1fintech_1_1internal_1a4b7a3b023262ea73d3de9de02e970a25:
.. _cid-xf::fintech::internal::log-2:
.. _doxid-namespacexf_1_1fintech_1_1internal_1aa1bc2726458f0e763ba6c1ef7a761d55:
.. _cid-xf::fintech::internal::pow:
.. _doxid-namespacexf_1_1fintech_1_1internal_1ad9bd3148b061e294038f0e07137079d3:
.. _cid-xf::fintech::internal::pow-2:
.. _doxid-namespacexf_1_1fintech_1_1internal_1a0c648a7257be409003f0c51807f1b5bf:
.. _cid-xf::fintech::internal::atan2:
.. _doxid-namespacexf_1_1fintech_1_1internal_1a333a00af23fd2beaeaf2c99cf7f1e071:
.. _cid-xf::fintech::internal::atan2-2:
.. _doxid-namespacexf_1_1fintech_1_1internal_1a430cd11c716a7b0cf46ede2660c2cfeb:
.. _cid-xf::fintech::internal::sin:
.. _doxid-namespacexf_1_1fintech_1_1internal_1a84228c4424a3103c206237f8eb0205f2:
.. _cid-xf::fintech::internal::sin-2:
.. _doxid-namespacexf_1_1fintech_1_1internal_1a55ec141315df9877fc870b717a9e6b59:
.. _cid-xf::fintech::internal::cos:
.. _doxid-namespacexf_1_1fintech_1_1internal_1a09c603e2d0c9eaf8de7212ebbfe8d1b5:
.. _cid-xf::fintech::internal::cos-2:
.. _doxid-namespacexf_1_1fintech_1_1internal_1a1900f5d0df5b647a1b7ecb4d90ab5675:
.. _cid-xf::fintech::internal::cn_init:
.. _doxid-namespacexf_1_1fintech_1_1internal_1a85451174b4f815aad53ca12e6835026a:
.. _cid-xf::fintech::internal::cn_add:
.. _doxid-namespacexf_1_1fintech_1_1internal_1a2fd6c2c0b1fc2974b4153b2c93decf3f:
.. _cid-xf::fintech::internal::cn_sub:
.. _doxid-namespacexf_1_1fintech_1_1internal_1aa932cf6573aac479a5a8334983d3b408:
.. _cid-xf::fintech::internal::cn_mul:
.. _doxid-namespacexf_1_1fintech_1_1internal_1aeafe56e3c81762547ba8ebfc45a0b5d8:
.. _cid-xf::fintech::internal::cn_scalar_mul:
.. _doxid-namespacexf_1_1fintech_1_1internal_1a1eacb46585b99b73507d10f741727d30:
.. _cid-xf::fintech::internal::cn_mod:
.. _doxid-namespacexf_1_1fintech_1_1internal_1abe6e227eeb6626d62ae10b86907465c6:
.. _cid-xf::fintech::internal::cn_arg:
.. _doxid-namespacexf_1_1fintech_1_1internal_1aac3623b6f9862c33dbdc74ef7c76d512:
.. _cid-xf::fintech::internal::cn_div:
.. _doxid-namespacexf_1_1fintech_1_1internal_1a272267b248f33942353bb10141822d99:
.. _cid-xf::fintech::internal::cn_exp:
.. _doxid-namespacexf_1_1fintech_1_1internal_1a5766e2dd0c2fcd123f8d46483b081f8b:
.. _cid-xf::fintech::internal::cn_ln:
.. _doxid-namespacexf_1_1fintech_1_1internal_1a224b71c43c53a6e50f2fde738cb56a04:
.. _cid-xf::fintech::internal::cn_sqrt:
.. _doxid-namespacexf_1_1fintech_1_1internal_1a72c12ef8336ed7d8aae1ebbaf38117d2:
.. _cid-xf::fintech::internal::cn_real:
.. ref-code-block:: cpp
	:class: overview-code-block

	// structs

	template <typename DT>
	struct :ref:`complex_num<doxid-structxf_1_1fintech_1_1internal_1_1complex__num>` 

	// classes

	template <
	    typename DT,
	    unsigned int M_SIZE,
	    unsigned int LOG2_M_SIZE,
	    unsigned int A_SIZE,
	    unsigned int MEM_WIDTH,
	    unsigned int DIM2_SIZE1 = 3,
	    unsigned int DIM2_SIZE2 = 5
	    >
	class :ref:`Solver<doxid-classxf_1_1fintech_1_1internal_1_1_solver>` 

	template <
	    typename DT,
	    unsigned int MEM_WIDTH,
	    unsigned int INDEX_WIDTH,
	    unsigned int A_SIZE,
	    unsigned int M_SIZE,
	    unsigned int LOG2_M_SIZE,
	    unsigned int DIM2_SIZE1 = 3,
	    unsigned int DIM2_SIZE2 = 5
	    >
	class :ref:`StreamWrapper<doxid-classxf_1_1fintech_1_1internal_1_1_stream_wrapper>` 


.. FunctionSection




.. _doxid-namespacexf_1_1fintech_1_1internal_1acd26aa2c71ff843af3a14f89533c4189:
.. _cid-xf::fintech::internal::phi:

phi
---


Defined in <xf_fintech/cf_bsm.hpp>
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^


.. ref-code-block:: cpp
	:class: title-code-block

	template <typename DT>
	DT phi (DT xin)

Approximation to Normal CDF.

This is an implentation of the Abramowitz and Stegun approximation. Refer to https://en.wikipedia.org/wiki/Error_function under the Numerical Approximations section.



.. rubric:: Parameters:

.. list-table::
    :widths: 20 80

    *
        - DT

        - Data Type used for this function

    *
        - xin

        - variable



.. rubric:: Returns:

Normal CDF of input variable

.. _doxid-namespacexf_1_1fintech_1_1internal_1a08962b4c346048c29d76299e6107f485:
.. _cid-xf::fintech::internal::v2s:

V2S
---


Defined in <xf_fintech/fd_solver.hpp>
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^


.. ref-code-block:: cpp
	:class: title-code-block

	unsigned int V2S (
	    const unsigned int index,
	    const unsigned int m1,
	    const unsigned int m2
	    )

Get V-inner index from an S ordered vector.

.. _doxid-namespacexf_1_1fintech_1_1internal_1ad07630c6a5923bfcb47553900171c911:
.. _cid-xf::fintech::internal::s2v:

S2V
---


Defined in <xf_fintech/fd_solver.hpp>
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^


.. ref-code-block:: cpp
	:class: title-code-block

	unsigned int S2V (
	    const unsigned int index,
	    const unsigned int m1,
	    const unsigned int m2
	    )

Get S-inner index from an V ordered vector.

.. _doxid-namespacexf_1_1fintech_1_1internal_1a1600a137b7da1838f421c37603aa697a:
.. _cid-xf::fintech::internal::charfunc:

charFunc
--------


Defined in <xf_fintech/hcf_engine.hpp>
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^


.. ref-code-block:: cpp
	:class: title-code-block

	template <typename DT>
	struct :ref:`complex_num<doxid-structxf_1_1fintech_1_1internal_1_1complex__num>` <DT> charFunc (
	    struct :ref:`hcfEngineInputDataType<doxid-structxf_1_1fintech_1_1hcf_engine_input_data_type>` <DT>* in,
	    struct :ref:`complex_num<doxid-structxf_1_1fintech_1_1internal_1_1complex__num>` <DT> w
	    )

function to calculate the characteristic function



.. rubric:: Parameters:

.. list-table::
    :widths: 20 80

    *
        - in

        - A structure containing the kerenl model parameters

    *
        - w

        - complex representation of w



.. rubric:: Returns:

the calculated characterisic function value

.. _doxid-namespacexf_1_1fintech_1_1internal_1a1f3412493234c02038fcd786096af93d:
.. _cid-xf::fintech::internal::pi1integrand:

pi1Integrand
------------


Defined in <xf_fintech/hcf_engine.hpp>
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^


.. ref-code-block:: cpp
	:class: title-code-block

	template <typename DT>
	DT pi1Integrand (
	    struct :ref:`hcfEngineInputDataType<doxid-structxf_1_1fintech_1_1hcf_engine_input_data_type>` <DT>* in,
	    DT w
	    )

function to calculate the integrand for pi 1



.. rubric:: Parameters:

.. list-table::
    :widths: 20 80

    *
        - in

        - A structure containing the kerenl model parameters

    *
        - w

        - the limit



.. rubric:: Returns:

the calculated integrand value

.. _doxid-namespacexf_1_1fintech_1_1internal_1a5c8438fb08dccd02d85f606752bf9503:
.. _cid-xf::fintech::internal::pi2integrand:

pi2Integrand
------------


Defined in <xf_fintech/hcf_engine.hpp>
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^


.. ref-code-block:: cpp
	:class: title-code-block

	template <typename DT>
	DT pi2Integrand (
	    struct :ref:`hcfEngineInputDataType<doxid-structxf_1_1fintech_1_1hcf_engine_input_data_type>` <DT>* in,
	    DT w
	    )

function to calculate the integrand for pi 2



.. rubric:: Parameters:

.. list-table::
    :widths: 20 80

    *
        - in

        - A structure containing the kerenl model parameters

    *
        - w

        - the limit



.. rubric:: Returns:

the calculated integrand value

.. _doxid-namespacexf_1_1fintech_1_1internal_1a8b435d135797a83cdf578651c0593618:
.. _cid-xf::fintech::internal::integrateforpi1:

integrateForPi1
---------------


Defined in <xf_fintech/hcf_engine.hpp>
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^


.. ref-code-block:: cpp
	:class: title-code-block

	template <typename DT>
	DT integrateForPi1 (struct :ref:`hcfEngineInputDataType<doxid-structxf_1_1fintech_1_1hcf_engine_input_data_type>` <DT>* in)

integration function pi 1



.. rubric:: Parameters:

.. list-table::
    :widths: 20 80

    *
        - in

        - A structure containing the kerenl model parameters



.. rubric:: Returns:

the calculated value

.. _doxid-namespacexf_1_1fintech_1_1internal_1a362ed0401ed5475d52583c887f656faf:
.. _cid-xf::fintech::internal::integrateforpi2:

integrateForPi2
---------------


Defined in <xf_fintech/hcf_engine.hpp>
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^


.. ref-code-block:: cpp
	:class: title-code-block

	template <typename DT>
	DT integrateForPi2 (struct :ref:`hcfEngineInputDataType<doxid-structxf_1_1fintech_1_1hcf_engine_input_data_type>` <DT>* in)

integration function pi 1



.. rubric:: Parameters:

.. list-table::
    :widths: 20 80

    *
        - in

        - A structure containing the kerenl model parameters



.. rubric:: Returns:

the calculated value

.. _doxid-namespacexf_1_1fintech_1_1internal_1a8e7efe501611fc79cc41ffcf9aae6060:
.. _cid-xf::fintech::internal::sum:

sum
---


Defined in <xf_fintech/m76_engine.hpp>
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^


.. ref-code-block:: cpp
	:class: title-code-block

	template <typename DT>
	void sum (
	    DT* out,
	    DT* in
	    )

Summing loop for the individual BS solutions.



.. rubric:: Parameters:

.. list-table::
    :widths: 20 80

    *
        - in

        - An array of the individual solutions

    *
        - out

        - The sum

.. _doxid-namespacexf_1_1fintech_1_1internal_1a61315bdb5fd820289c63a98fc35e2c69:
.. _cid-xf::fintech::internal::targetdist:

TargetDist
----------


Defined in <xf_fintech/pop_mcmc.hpp>
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^


.. ref-code-block:: cpp
	:class: title-code-block

	template <typename DT>
	DT TargetDist (
	    DT x,
	    DT temp_inv
	    )

Calculates target distribution density for a given sample and temperature. Calculated density is raised to power of temperature of target chain.



.. rubric:: Parameters:

.. list-table::
    :widths: 20 80

    *
        - DT

        - data type used in whole function (double by default)

    *
        - x

        - - Sample to generate density for

    *
        - temp_inv

        - - Inverted temperature of the chain that density is generate for (1/Temp)



.. rubric:: Returns:

Calculated density

.. _doxid-namespacexf_1_1fintech_1_1internal_1a9d2424df4266033ad3db4c9ce08bd42b:
.. _cid-xf::fintech::internal::gausstransform:

GaussTransform
--------------


Defined in <xf_fintech/pop_mcmc.hpp>
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^


.. ref-code-block:: cpp
	:class: title-code-block

	template <typename DT>
	DT GaussTransform (
	    DT in,
	    DT mu,
	    DT sigma
	    )

Calculates final transformation of Gaussian Sample.



.. rubric:: Parameters:

.. list-table::
    :widths: 20 80

    *
        - DT

        - Data type used in whole function (double by default)

    *
        - in

        - - Sample from Uniform Distribution

    *
        - mu

        - - Expected value for Normal Distribution

    *
        - sigma

        - - Sigma for Proposal generation



.. rubric:: Returns:

- Generated Sample

.. _doxid-namespacexf_1_1fintech_1_1internal_1ae4ea72083703a1a2959b96738f741ef1:
.. _cid-xf::fintech::internal::probeval:

ProbEval
--------


Defined in <xf_fintech/pop_mcmc.hpp>
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^


.. ref-code-block:: cpp
	:class: title-code-block

	template <
	    typename DT,
	    unsigned int NCHAINS
	    >
	void ProbEval (
	    DT chain_in [NCHAINS],
	    hls::stream <DT>& chain_out,
	    DT gauss [NCHAINS],
	    DT gauss_next [NCHAINS],
	    xf::fintech::MT19937& uniformRNG,
	    DT temp_inv [NCHAINS],
	    DT sigma [NCHAINS]
	    )

Probability evaluation function.

It Generates samples for all chains. Metropolis sampler is used in this function.

Fully pipelined for chains.

During Probability evaluation gauss sample for next sample is generated in parallel,

this allows to save half of the time for probability evaluation.

Part of the dataflow streaming region.



.. rubric:: Parameters:

.. list-table::
    :widths: 20 80

    *
        - DT

        - data type used in whole function (double by default)

    *
        - NCHAINS

        - Number of chains

    *
        - chain_in

        - - Previous samples for each chains

    *
        - gauss

        - - Gaussian sample proposal on [0:1] for current sample (1/Temp)

    *
        - gauss_next

        - - Gaussian sample proposal on [0:1] for next sample

    *
        - chain_out

        - - Samples streaming output

    *
        - uniformRNG

        - - Pointer to Uniform RNG for Accept/Reject

    *
        - temp_inv

        - - Array of Inverted temperatures of the chain that density is generate for (1/Temp)

    *
        - sigma

        - - Array of sigmas for Proposal generation for each chain

.. _doxid-namespacexf_1_1fintech_1_1internal_1a71b30daf7f8a3e57ebe187bb82b782f4:
.. _cid-xf::fintech::internal::chainexchange:

ChainExchange
-------------


Defined in <xf_fintech/pop_mcmc.hpp>
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^


.. ref-code-block:: cpp
	:class: title-code-block

	template <
	    typename DT,
	    unsigned int NCHAINS
	    >
	void ChainExchange (
	    hls::stream <DT>& chain_in,
	    DT chain_out [NCHAINS],
	    DT temp_inv [NCHAINS]
	    )

Chain Exchange function.

Calculates exchange ratio and exchanges chains if needed.

Fully pipelined for chains.

Part of the dataflow streaming region.



.. rubric:: Parameters:

.. list-table::
    :widths: 20 80

    *
        - DT

        - data type used in whole function (double by default)

    *
        - NCHAINS

        - Number of chains

    *
        - chain_in

        - - Current sample streaming input interface

    *
        - chain_out

        - - Array of generated samples for each chain samples.

    *
        - temp_inv

        - - Array of Inverted temperatures of the chain that density is generate for (1/Temp)

.. _doxid-namespacexf_1_1fintech_1_1internal_1a5ae2c987072bb06f7a60ca7b20aa277c:
.. _cid-xf::fintech::internal::sampleeval:

SampleEval
----------


Defined in <xf_fintech/pop_mcmc.hpp>
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^


.. ref-code-block:: cpp
	:class: title-code-block

	template <
	    typename DT,
	    unsigned int NCHAINS
	    >
	void SampleEval (
	    DT chain [NCHAINS],
	    DT chain_out [NCHAINS],
	    DT gauss [NCHAINS],
	    DT gauss_next [NCHAINS],
	    xf::fintech::MT19937& uniformRNG,
	    DT temp_inv [NCHAINS],
	    DT sigma [NCHAINS]
	    )

Wraping function for dataflow region. /n.



.. rubric:: Parameters:

.. list-table::
    :widths: 20 80

    *
        - DT

        - data type used in whole function (double by default)

    *
        - NCHAINS

        - Number of chains

    *
        - chain

        - - Previous samples for each chains

    *
        - gauss

        - - Gaussian sample proposal on [0:1] for current sample (1/Temp)

    *
        - gauss_next

        - - Gaussian sample proposal on [0:1] for next sample

    *
        - chain_out

        - - Array of generated samples

    *
        - uniformRNG

        - - Pointer to Uniform RNG for Accept/Reject

    *
        - temp_inv

        - - Array of Inverted temperatures of the chain that density is generate for (1/Temp)

    *
        - sigma

        - - Array of sigmas for Proposal generation for each chain

